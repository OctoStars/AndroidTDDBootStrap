/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Piasy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply from: "$rootProject.projectDir/buildsystem/buildings.gradle"

apply plugin: 'com.android.application'
apply plugin: 'com.chenenyu.router'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'android-git-sha'
apply plugin: 'net.ltgt.errorprone'
apply from: "$rootProject.projectDir/AndroidCodeQualityConfig/quality.gradle"

def isTravis = "true" == System.getenv("TRAVIS")

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName rootProject.ext.releaseVersionName

        applicationId "com.github.piasy.octostars"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.github.piasy.octostars.BootstrapAppRunner"
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = !isTravis
        maxProcessCount 8
        javaMaxHeapSize = isTravis ? "2g" : "6g"
    }

    signingConfigs {
        sign {
            storeFile signStoreFile
            storePassword signStorePassword
            keyAlias signKeyAlias
            keyPassword signKeyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.sign
            testCoverageEnabled isTravis
            ext.enableCrashlytics = false
        }

        qa {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.sign
            ext.enableCrashlytics = true
        }

        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            signingConfig signingConfigs.sign
            //signingConfig signingConfigs.production
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            ext.enableCrashlytics = true
        }
    }
}

unMock {
    downloadFrom 'https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/6.0.0_r1-robolectric-0/android-all-6.0.0_r1-robolectric-0.jar'
    downloadTo "${System.getenv('HOME')}/.gradle/caches/"

    keep "android.text.TextUtils"
}

gitSha {
    buildTypeMatcher = 'release'
    flavorMatcher = '.*'
    abortIfGitDirty = false
}

dependencies {
    compile featureDependencies.cardViewV7

    compile project(':base')
    debugCompile project(path: ':contrib:business', configuration: 'debug')
    qaCompile project(path: ':contrib:business', configuration: 'qa')
    releaseCompile project(path: ':contrib:business', configuration: 'release')

    if (isComposeBuild) {
        compile project(':contrib:piasy:splash')
        compile project(':contrib:piasy:login')
        compile project(':contrib:piasy:trending')
    }

    compile featureDependencies.rxJavaProGuardRules

    compile featureDependencies.iconifyMD
    compile featureDependencies.statusBarUtil

    provided aptDependencies.autoValue // for ide
    annotationProcessor aptDependencies.autoValue // for okbuck
    provided aptDependencies.autoGsonApt // for ide
    annotationProcessor aptDependencies.autoGsonApt // for okbuck
    annotationProcessor aptDependencies.autoParcelApt

    annotationProcessor aptDependencies.daggerApt
    annotationProcessor aptDependencies.butterKnifeApt
    annotationProcessor aptDependencies.icepickApt
    annotationProcessor aptDependencies.onActivityResultApt
    annotationProcessor aptDependencies.autoBundleApt

    retrolambdaConfig aptDependencies.retrolambda
    errorprone aptDependencies.errorprone

    androidTestCompile project(':mocks')
    androidTestCompile project(':testbase')
    androidTestAnnotationProcessor aptDependencies.daggerApt
}

if (isComposeBuild) {
    apply plugin: 'com.google.gms.google-services'
}
